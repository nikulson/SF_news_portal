python manage.py shell

Импортируем модель news:
	>>> from news.models import *

Создаем пользователей:
>>> user1 = User.objects.create_user(username='Иван')    
>>> user1
<User: Иван>
>>> user2 = User.objects.create_user(username='Петр')  
>>> user2                                             
<User: Петр>
>>> user3 = User.objects.create_user(username='Максим') 
>>> user3                                               
<User: Максим>
>>> user4 = User.objects.create_user(username='Сергей') 
>>> user4  
<User: Сергей>

Создаем авторов:
>>> Author.objects.create(user=user1)       
<Author: Иван>
>>> Author.objects.create(user=user2) 
<Author: Петр>

Создаем категории:
>>> Category.objects.create(name='спорт')
<Category: Category object (5)>
>>> Category.objects.create(name='экономика')
<Category: Category object (6)>
>>> Category.objects.create(name='политика')
<Category: Category object (7)>
>>> Category.objects.create(name='IT-технологии')
<Category: Category object (8)>

Получаем автора по id:
>>> author = Author.objects.get(id=3)
>>> author
<Author: Иван>
>>> author2 = Author.objects.get(id=4)
>>> author2
<Author: Петр>


Создаем пост:
>>> Post.objects.create(authors=author, type='NW', title='какой-то заголовок', body='какой-то текст')
<Post: Post object (4)>
>>> Post.objects.get(id=4).title
'какой-то заголовок'
>>> Post.objects.create(authors=author2, type='AR', title='футбол', body='Зенит снова чемпион!')
<Post: Post object (5)>
>>> Post.objects.create(authors=author2, type='AR', title='Пайтон', body='Пайтон - один из самых популярных языков программирования')
<Post: Post object (6)>

присваиваем категории:
>>> Post.objects.get(id=4).category.add(Category.objects.get(id=6))
>>> Post.objects.get(id=5).category.add(Category.objects.get(id=5))
>>> Post.objects.get(id=6).category.add(Category.objects.get(id=7))
>>> Post.objects.get(id=4).category.add(Category.objects.get(id=5))
>>> Post.objects.get(id=5).category.add(Category.objects.get(id=6))
>>> Post.objects.get(id=6).category.add(Category.objects.get(id=7))

создаем комментарии:
>>> Comment.objects.create(post=Post.objects.get(id=4), user=Author.objects.get(id=3).user, text='классная новость')
<Comment: Comment object (6)>
>>> Comment.objects.create(post=Post.objects.get(id=4), user=Author.objects.get(id=4).user, text='Вау')
<Comment: Comment object (7)>
>>> Comment.objects.create(post=Post.objects.get(id=5), user=Author.objects.get(id=3).user, text='Зенит - чемпион!')
<Comment: Comment object (8)>
>>> Comment.objects.create(post=Post.objects.get(id=6), user=Author.objects.get(id=4).user, text='Привет, мир')
<Comment: Comment object (9)>
>>> Comment.objects.create(post=Post.objects.get(id=6), user=Author.objects.get(id=3).user, text='Все так')
<Comment: Comment object (10)>

создаем лайки к комментариям:
>>> Comment.objects.get(id=6).like()
>>> Comment.objects.get(id=6).rating
1
>>> Comment.objects.get(id=6).like() 
>>> Comment.objects.get(id=6).rating                                                                                
2
>>> Comment.objects.get(id=6).dislike()
>>> Comment.objects.get(id=6).dislike()
>>> Comment.objects.get(id=6).dislike()
>>> Comment.objects.get(id=6).dislike()
>>> Comment.objects.get(id=6).rating                                                                                
-2
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).like()
>>> Comment.objects.get(id=7).dislike()
>>> Comment.objects.get(id=8).like()    
>>> Comment.objects.get(id=9).like() 
>>> Comment.objects.get(id=10).dislike() 


создаем лайки к статьям:
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=4).rating
1
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=4).like()
>>> Post.objects.get(id=5).like() 
>>> Post.objects.get(id=5).like()
>>> Post.objects.get(id=5).like()
>>> Post.objects.get(id=6).like() 
>>> Post.objects.get(id=6).like()
>>> Post.objects.get(id=6).like()
>>> Post.objects.get(id=6).like()
>>> Post.objects.get(id=6).like()
>>> Post.objects.get(id=4).dislike()
>>> Post.objects.get(id=4).dislike()

Получаем автора по id:
>>> Author.objects.get(id=3) 
<Author: Иван>


обновляем рейтинги пользователей:
>>> a = Author.objects.get(id=3)
>>> a.update_rating()
>>> a.rating
10
>>> b = Author.objects.get(id=4)
>>> b.update_rating()
>>> b.rating
30

Выводим лучшего пользователя применяя сортировку:
>>> a = Author.objects.order_by('-rating')[:1]
>>> a
<QuerySet [<Author: Петр>]>


Выводим рейтинги и всех пользователей применяя цикл for:
>>> for i in a:               
...     i.rating
...     i.user.username       
... 
30
'Петр'
10
'Иван'

Определяем лучшей пост:
>>> bestPost = Post.objects.order_by('-rating')[:1]
>>> bestPost
<QuerySet [<Post: Post object (6)>]>

Выводим все комментарии к этому посту.
>>> bestPostCom = Comment.objects.filter(post=6)
>>> bestPostCom
<QuerySet [<Comment: Comment object (9)>, <Comment: Comment object (10)>]>

Применяем метод preview() к постам:
>>> Post.objects.get(id=4).preview()
'какой-то текст...'
>>> Post.objects.get(id=6).preview() 
'Пайтон - один из самых популярных языков программирования...'

Выводим дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи:
>>> for i in bestPost: 
...     i.created_at
...     i.authors.user
...     i.rating
...     i.title
...     i.preview()
... 
datetime.datetime(2022, 10, 16, 12, 37, 48, 367012, tzinfo=datetime.timezone.utc)
<User: Петр>
5
'Пайтон'
'Пайтон - один из самых популярных языков программирования...'

Выводим дату добавления, username автора, рейтинг, текст комментариев к лучшей статье:
>>> for k in bestPostCom:
...     k.created_at
...     k.user
...     k.rating
...     k.text
... 
datetime.datetime(2022, 10, 16, 12, 50, 48, 30794, tzinfo=datetime.timezone.utc)
<User: Петр>
1
'Привет, мир'
datetime.datetime(2022, 10, 16, 12, 50, 58, 972836, tzinfo=datetime.timezone.utc)
<User: Иван>
-1
'Все так'

















